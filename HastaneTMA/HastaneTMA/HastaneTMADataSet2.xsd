<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HastaneTMADataSet2" targetNamespace="http://tempuri.org/HastaneTMADataSet2.xsd" xmlns:mstns="http://tempuri.org/HastaneTMADataSet2.xsd" xmlns="http://tempuri.org/HastaneTMADataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="HastaneTMAConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HastaneTMAConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.HastaneTMA.Properties.Settings.GlobalReference.Default.HastaneTMAConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExpensesTableAdapter" GeneratorDataComponentClassName="ExpensesTableAdapter" Name="Expenses" UserDataComponentName="ExpensesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HastaneTMAConnectionString (Settings)" DbObjectName="HastaneTMA.dbo.Expenses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Expenses] WHERE (([ID] = @Original_ID) AND ([GiderAdi] = @Original_GiderAdi) AND ([Miktar] = @Original_Miktar) AND ([Tarih] = @Original_Tarih))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_GiderAdi" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="GiderAdi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Miktar" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Miktar" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Tarih" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Tarih" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Expenses] ([GiderAdi], [Miktar], [Tarih]) VALUES (@GiderAdi, @Miktar, @Tarih);
SELECT ID, GiderAdi, Miktar, Tarih FROM Expenses WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@GiderAdi" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="GiderAdi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Miktar" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Miktar" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Tarih" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Tarih" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, GiderAdi, Miktar, Tarih FROM dbo.Expenses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Expenses] SET [GiderAdi] = @GiderAdi, [Miktar] = @Miktar, [Tarih] = @Tarih WHERE (([ID] = @Original_ID) AND ([GiderAdi] = @Original_GiderAdi) AND ([Miktar] = @Original_Miktar) AND ([Tarih] = @Original_Tarih));
SELECT ID, GiderAdi, Miktar, Tarih FROM Expenses WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@GiderAdi" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="GiderAdi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Miktar" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Miktar" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Tarih" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Tarih" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_GiderAdi" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="GiderAdi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Miktar" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Miktar" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Tarih" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Tarih" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="HastaneTMA.dbo.Expenses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="GiderAdi" DataSetColumn="GiderAdi" />
              <Mapping SourceColumn="Miktar" DataSetColumn="Miktar" />
              <Mapping SourceColumn="Tarih" DataSetColumn="Tarih" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HastaneTMADataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="HastaneTMADataSet2" msprop:Generator_DataSetName="HastaneTMADataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Expenses" msprop:Generator_RowEvHandlerName="ExpensesRowChangeEventHandler" msprop:Generator_RowDeletedName="ExpensesRowDeleted" msprop:Generator_RowDeletingName="ExpensesRowDeleting" msprop:Generator_RowEvArgName="ExpensesRowChangeEvent" msprop:Generator_TablePropName="Expenses" msprop:Generator_RowChangedName="ExpensesRowChanged" msprop:Generator_RowChangingName="ExpensesRowChanging" msprop:Generator_TableClassName="ExpensesDataTable" msprop:Generator_RowClassName="ExpensesRow" msprop:Generator_TableVarName="tableExpenses" msprop:Generator_UserTableName="Expenses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="GiderAdi" msprop:Generator_ColumnPropNameInRow="GiderAdi" msprop:Generator_ColumnPropNameInTable="GiderAdiColumn" msprop:Generator_ColumnVarNameInTable="columnGiderAdi" msprop:Generator_UserColumnName="GiderAdi">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Miktar" msprop:Generator_ColumnPropNameInRow="Miktar" msprop:Generator_ColumnPropNameInTable="MiktarColumn" msprop:Generator_ColumnVarNameInTable="columnMiktar" msprop:Generator_UserColumnName="Miktar" type="xs:int" />
              <xs:element name="Tarih" msprop:Generator_ColumnPropNameInRow="Tarih" msprop:Generator_ColumnPropNameInTable="TarihColumn" msprop:Generator_ColumnVarNameInTable="columnTarih" msprop:Generator_UserColumnName="Tarih" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Expenses" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>